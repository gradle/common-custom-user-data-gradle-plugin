plugins {
    id 'java-gradle-plugin'
    id 'groovy'
    id 'maven-publish'
    id 'signing'
    id 'com.gradle.plugin-publish' version '0.21.0'
    id 'com.github.breadmoirai.github-release' version '2.2.12'
    id 'org.gradle.wrapper-upgrade' version '0.10.1'
}

group = 'com.gradle'
version = layout.projectDirectory.file('release/version.txt').asFile.text.trim()

repositories {
    gradlePluginPortal()
}

dependencies {
    compileOnly 'com.gradle:gradle-enterprise-gradle-plugin:3.9'

    testImplementation 'org.spockframework:spock-core:2.1-groovy-3.0'
}

wrapperUpgrade {
    gradle {
        'common-custom-user-data-gradle-plugin' {
            repo = 'gradle/common-custom-user-data-gradle-plugin'
        }
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
}

gradlePlugin {
    automatedPublishing = false

    plugins {
        commonCustomUserData {
            id = 'com.gradle.common-custom-user-data-gradle-plugin'
            displayName = 'Gradle Enterprise Common Custom User Data Gradle Plugin'
            description = 'A Gradle plugin to capture common custom user data used for Gradle Build Scans in Gradle Enterprise'
            implementationClass = 'com.gradle.CommonCustomUserDataGradlePlugin'
        }
    }
}

tasks.withType(ValidatePlugins).configureEach {
    failOnWarning = true
    enableStricterValidation = true
}

// A local repo we publish our library to for testing in order to workaround limitations
// in the TestKit plugin classpath.
def localRepo = file("$buildDir/local-repo")
publishing {
    // Since for now we need to set `gradlePlugin { automatedPublishing = false ... }`, we have to create manually
    // the Maven publication. This can be removed once a new `plugin-publish` version supports automatically
    // publishing signatures
    publications {
        maven(MavenPublication) {
            groupId = group
            artifactId = artifactId
            version = version

            from components.java
        }
    }
    repositories {
        maven {
            url = localRepo.toURI()
        }
    }
}

tasks.withType(Test).configureEach {
    dependsOn publish
    workingDir projectDir
    systemProperty "local.repo", projectDir.toPath().relativize(localRepo.toPath()).toString()
    systemProperty "com.gradle.common-custom-user-data-gradle-plugin.version", version
    useJUnitPlatform()
}

/*
The rest of the build logic in this file is only required for publishing to the Gradle Plugin Portal.
When using this project as a template for your own plugin to publish internally, you should delete all code following this comment.
You may also remove `plugin-publish` and `signing` from the `plugins {}` block above.
 */

pluginBundle {
    website = 'https://github.com/gradle/common-custom-user-data-gradle-plugin'
    vcsUrl = 'https://github.com/gradle/common-custom-user-data-gradle-plugin.git'
    tags = ['android', 'java', 'gradle enterprise']

    mavenCoordinates {
        groupId = 'com.gradle'
        artifactId = 'common-custom-user-data-gradle-plugin'
    }
}

signing {
    // Require publications to be signed on CI. Otherwise, publication will be signed only if keys are provided.
    required providers.environmentVariable('CI').isPresent()

    useInMemoryPgpKeys(
        providers.environmentVariable('PGP_SIGNING_KEY').orNull,
        providers.environmentVariable('PGP_SIGNING_KEY_PASSPHRASE').orNull
    )

    sign(configurations.archives)
}

githubRelease {
   token = System.getenv('CCUD_GIT_TOKEN') ?: ''
   owner = 'gradle'
   repo = 'common-custom-user-data-gradle-plugin'
   targetCommitish = 'main'
   releaseName = gitHubReleaseName()
   tagName = gitReleaseTag()
   prerelease = false
   overwrite = false
   body = layout.projectDirectory.file('release/changes.md').asFile.text.trim()
}

tasks.register('createReleaseTag', CreateGitTag) {
    tagName = gitReleaseTag()
}

tasks.named('githubRelease') {
    dependsOn('createReleaseTag')
}

def gitHubReleaseName() {
    return version.toString()
}

def gitReleaseTag() {
    return "v${version}"
}
